---
- name: Change root password
  user:
    name: root
    password: '{{ kernel_security_root_password }}'
  become: yes
  when: kernel_security_skip_root_password is undefined or not kernel_security_skip_root_password


- name: Upgrade apt to the latest packages
  apt:
    upgrade: safe
    install_recommends: yes
    force: yes
  become: yes
  when: kernel_security_force_upgrade_all_packages_to_latest is defined and kernel_security_force_upgrade_all_packages_to_latest


- name: Install security prereqs
  apt:
    name: '{{ item }}'
    state: installed
    update_cache: yes
    cache_valid_time: 86400
    install_recommends: yes
  become: yes
  with_items: '{{ kernel_security_packages }}'


- name: Eliminate sudo group
  lineinfile:
    dest: /etc/sudoers
    state: absent
    regexp: '^%sudo'
    validate: 'visudo -cf %s'
  become: yes


- name: Disallow password authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication no"
    state: present
  become: yes
  when: kernel_security_allow_password_authentication is undefined or not kernel_security_allow_password_authentication


- name: Adjust APT update intervals
  copy:
    src: kernel_security_apt_periodic
    dest: /etc/apt/apt.conf.d/10periodic
  become: yes


- name: Make sure unattended-upgrades only installs from {{ kernel_security_ubuntu_release }}-security
  lineinfile:
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: "{{ kernel_security_ubuntu_release }}-updates"
    state: absent
  become: yes


- name: Reset ufw
  shell: yes | sudo ufw reset ; sudo ufw allow 22/tcp ; yes | sudo ufw enable
  become: yes


- name: Set ufw to block by default
  shell: ufw default deny
  become: yes


- name: Specify allowable ports for ufw
  shell: ufw {{ item }}
  become: yes
  with_items: '{{ kernel_security_ports }}'


- name: Don't hash known_hosts entries
  lineinfile:
    dest: /etc/ssh/ssh_config
    state: present
    regexp: '^\s*HashKnownHosts'
    line: '    HashKnownHosts no'
    validate: 'echo %s > /dev/null ; sudo sshd -t' # %s must be present :(
  become: yes


- name: Restart ssh
  service:
    name: ssh
    state: restarted
  become: yes
